{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFLoadCustomer"
		},
		"SQLDBSink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLDBSink'"
		},
		"SourceBlobStore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SourceBlobStore'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyProductSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy Product file to Sink",
				"activities": [
					{
						"name": "Copy_Product_Source",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "sourcefiles/input/products.xml"
							},
							{
								"name": "Destination",
								"value": "Demo.KI_Product"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "xsd",
									"detectDataType": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['dataset']['record'][0]['id']"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['description']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['brand']"
										},
										"sink": {
											"name": "Brand",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['color']"
										},
										"sink": {
											"name": "Color",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['barcode']"
										},
										"sink": {
											"name": "Barcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['origin']"
										},
										"sink": {
											"name": "Origin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['material']"
										},
										"sink": {
											"name": "Material",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['size']"
										},
										"sink": {
											"name": "Size",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dataset']['record'][0]['price']"
										},
										"sink": {
											"name": "Price",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['dataset']['record']"
							}
						},
						"inputs": [
							{
								"referenceName": "ProductSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "KIProductDimension",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ProductSource')]",
				"[concat(variables('factoryId'), '/datasets/KIProductDimension')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Load_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to Load Customer data",
				"activities": [
					{
						"name": "Load_Customer",
						"description": "Load Customer file to Sink",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Customer_Stage",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CustomerSource": {},
									"CustomerStaging": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Load_Customer_Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_transaction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTransactionSource",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "sourcefiles/input/transactions.json"
							},
							{
								"name": "Destination",
								"value": "Demo.KI_Transaction"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "TransactionID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['customer_id']"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['datetime']"
										},
										"sink": {
											"name": "datetime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['product_id']"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['quantity']"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['total_price']"
										},
										"sink": {
											"name": "TotalPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['comments']"
										},
										"sink": {
											"name": "Comments",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "TransactionSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "KITransactionFact",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TransactionSource')]",
				"[concat(variables('factoryId'), '/datasets/KITransactionFact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data set for Customer file from Source",
				"linkedServiceName": {
					"referenceName": "SourceBlobStore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customer_data.csv",
						"folderPath": "input",
						"container": "sourcefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SourceBlobStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerTransformed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceBlobStore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "transformed",
						"container": "sourcefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SourceBlobStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KIProductDimension')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBSink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ValidToDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Origin",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Material",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Size",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Price",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "InsertDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ValidFromDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Name",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Description",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Brand",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Color",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Barcode",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SKProdID",
						"type": "int",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "Demo",
					"table": "KI_Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KITransactionFact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBSink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SKTnxID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "datetime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "InsertDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ValidFromDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ValidToDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Demo",
					"table": "KI_Transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KIcustomerDimension')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBSink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SKCustID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Address",
						"type": "nvarchar"
					},
					{
						"name": "InsertDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ValidFromDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ValidToDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Demo",
					"table": "KI_Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceBlobStore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "products.xml",
						"folderPath": "input",
						"container": "sourcefiles"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SourceBlobStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lmm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceBlobStore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "transactions.json",
						"folderPath": "input",
						"container": "sourcefiles"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "integer"
						},
						"customer_id": {
							"type": "integer"
						},
						"datetime": {
							"type": "string"
						},
						"product_id": {
							"type": "integer"
						},
						"quantity": {
							"type": "integer"
						},
						"total_price": {
							"type": "number"
						},
						"comments": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SourceBlobStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransactionSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SourceBlobStore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "transactions.json",
						"folderPath": "input",
						"container": "sourcefiles"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "integer"
						},
						"customer_id": {
							"type": "integer"
						},
						"datetime": {
							"type": "string"
						},
						"product_id": {
							"type": "integer"
						},
						"quantity": {
							"type": "integer"
						},
						"total_price": {
							"type": "number"
						},
						"comments": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SourceBlobStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDBSink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The SQL DB where the data will be copied",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLDBSink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceBlobStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Container where source files would be available",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SourceBlobStore_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Customer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Loading Customer data to Sink",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CustomerSource",
								"type": "DatasetReference"
							},
							"name": "CustomerSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "KIcustomerDimension",
								"type": "DatasetReference"
							},
							"name": "CustomerSink"
						},
						{
							"dataset": {
								"referenceName": "CustomerTransformed",
								"type": "DatasetReference"
							},
							"name": "CustomerProcessed",
							"description": "The transformed Customer data is saved in Blob Storage"
						}
					],
					"transformations": [
						{
							"name": "MappingAttributes",
							"description": "Renaming the attributes and remove duplicates"
						},
						{
							"name": "ValidateGenderAddDate",
							"description": "Validate Gender Attribute values"
						}
					],
					"script": "source(output(\n\t\tid as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tcountry as string,\n\t\taddress as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CustomerSource\nCustomerSource select(mapColumn(\n\t\tCustomerID = id,\n\t\tFirstName = first_name,\n\t\tLastName = last_name,\n\t\tEmail = email,\n\t\tGender = gender,\n\t\tCountry = country,\n\t\tAddress = address\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MappingAttributes\nMappingAttributes derive(Gender = case(case( Gender=='Male',1,Gender=='Female',2)==1,'Male',\r\n     case( Gender=='Male',1,Gender=='Female',2)==2,'Female'),\n\t\tInsertDate = currentUTC('dd-MM-yyyy hh:mm'),\n\t\tValidFromDate = currentUTC('dd-MM-yyyy'),\n\t\tValidToDate = toDate('99993112','yyyyddMM')) ~> ValidateGenderAddDate\nValidateGenderAddDate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSKCustID as integer,\n\t\tCustomerID as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tEmail as string,\n\t\tGender as string,\n\t\tCountry as string,\n\t\tAddress as string,\n\t\tInsertDate as timestamp,\n\t\tValidFromDate as timestamp,\n\t\tValidToDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomerID,\n\t\tFirstName,\n\t\tLastName,\n\t\tEmail,\n\t\tGender,\n\t\tCountry,\n\t\tAddress,\n\t\tInsertDate,\n\t\tValidFromDate,\n\t\tValidToDate\n\t)) ~> CustomerSink\nValidateGenderAddDate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tfilePattern:'CustomerTransformed',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tid = CustomerID,\n\t\tfirst_name = FirstName,\n\t\tlast_name = LastName,\n\t\temail = Email,\n\t\tgender = Gender,\n\t\tcountry = Country,\n\t\taddress = Address\n\t)) ~> CustomerProcessed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerSource')]",
				"[concat(variables('factoryId'), '/datasets/KIcustomerDimension')]",
				"[concat(variables('factoryId'), '/datasets/CustomerTransformed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Customer_Stage')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Loading Customer data to Stage",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CustomerSource",
								"type": "DatasetReference"
							},
							"name": "CustomerSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CustomerStaging",
								"type": "DatasetReference"
							},
							"name": "CustomerStaging"
						}
					],
					"transformations": [
						{
							"name": "MappingAttributes",
							"description": "Renaming the attributes and remove duplicates"
						}
					],
					"script": "source(output(\n\t\tid as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tcountry as string,\n\t\taddress as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CustomerSource\nCustomerSource select(mapColumn(\n\t\tCustomerID = id,\n\t\tFirstName = first_name,\n\t\tLastName = last_name,\n\t\tEmail = email,\n\t\tGender = gender,\n\t\tCountry = country,\n\t\tAddress = address\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MappingAttributes\nMappingAttributes sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCustomerID as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tEmail as string,\n\t\tGender as string,\n\t\tCountry as string,\n\t\tAddress as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomerID,\n\t\tFirstName,\n\t\tLastName,\n\t\tEmail,\n\t\tGender,\n\t\tCountry,\n\t\tAddress\n\t)) ~> CustomerStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerSource')]",
				"[concat(variables('factoryId'), '/datasets/CustomerStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBSink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Demo",
					"table": "KI_Customer_STG"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBSink')]"
			]
		}
	]
}